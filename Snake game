import pygame
import random
import math
from pygame import mixer

pygame.init()
screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption('Created by CamaroBro180')
running = True
clock = pygame.time.Clock()
mixer.music.load('background.wav')
mixer.music.play(-1)
score = 0

# To End the game


def gameover():
    gamefont = pygame.font.Font('freesansbold.ttf', 64)
    gamerover1 = gamefont.render('GAME OVER', True, (255, 255, 255))
    screen.blit(gamerover1, (200, 250))

# To keep count of the score


def scorevalue():
    font = pygame.font.Font('freesansbold.ttf', 32)
    scorevalue1 = font.render("Score: " +str(score), True, (0, 225, 0))
    screen.blit(scorevalue1, (10, 10))


# Snake
x1 = 100  # Starting point of the snake
y1 = 400  # Starting point of the snake
snakex = 0  # To record the change the snake in the x direction
snakey = 0  # To record the change the snake in the y direction
snake_size = 17
snake_speed = 25
blue = (0, 0, 255)
snake_List = []
length_of_snake = 1

# Food
yellow = (255, 255, 0)
# To make sure the food does not spawn inside the barrier
x2 = random.randint(20, 200) or random.randint(600, 780)
y2 = random.randint(20, 200) or random.randint(227, 400) or random.randint(427, 600)

# Barriers
red = (255, 0, 0)


def barriers():
    pygame.draw.rect(screen, red, [200, 200, 400, 25])
    pygame.draw.rect(screen, red, [200, 400, 400, 25])


def snake(snake_list):
    for x3 in snake_list:
        pygame.draw.rect(screen, blue, [x3[0], x3[1], snake_size, snake_size])


def food(c, d):
    pygame.draw.rect(screen, yellow, [c, d, 10, 10])


# Snake with food collision
def iscollision(x1, y1, x2, y2):
    distance = math.sqrt((math.pow(x1 - x2, 2)) + (math.pow(y1 - y2, 2)))
    if distance < 15:
        return True
    else:
        return False


# Snake with barrier
def iscollison2(x1, y1):
    if x1 in range(200, 600) and (y1 in range(200, 225) or y1 in range(400, 425)):
        return True
    else:
        return False


while running:
    screen.fill((0, 0, 0))
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_c:
                running = True
            if event.key == pygame.K_LEFT:
                snakex = -10
                snakey = 0
            if event.key == pygame.K_RIGHT:
                snakex = 10
                snakey = 0
            if event.key == pygame.K_UP:
                snakey = -10
                snakex = 0
            if event.key == pygame.K_DOWN:
                snakey = 10
                snakex = 0

    snake_head = [x1, y1]
    snake_List.append(snake_head)
    if len(snake_List) > length_of_snake:
        del snake_List[0]
    x1 += snakex
    y1 += snakey

    # Snake when it hits itself
    for x in snake_List[:-1]:
        if x == snake_head:
            gameover()
            x1 = 3000
            y1 = 3000

    # Snake when it goes out of the screen
    if x1 < 0 or x1 > 800 or y1 < 0 or y1 > 600:
        gameover()
        x1 = 3000
        x2 = 3000

    # If collision happens with food
    collision = iscollision(x1, y1, x2, y2)
    if collision:
        x2 = random.randint(20, 780)
        y2 = random.randint(20, 580)
        length_of_snake += 1
        score += 1

    # If collision happens with barrier
    collision2 = iscollison2(x1, y1)
    if collision2:
        gameover()
        x1 = 2000
        y1 = 2000

    snake(snake_List)
    food(x2, y2)
    barriers()
    scorevalue()
    pygame.display.update()
    clock.tick(snake_speed)
